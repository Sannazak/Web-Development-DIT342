var express = require('express');
var router = express.Router();
var User = require('../models/users');

//get all users
router.get('/api/users', function (req, res, next) {
    User.find(function(err, user) {
        if (err) {return next(err);}
        res.json({'user': user});
    });
});

//get user with id
router.get('/api/users/:id', function(req, res, next) {
    var id = req.params.id;
    User.findById(id, function(err, user) {
        if (err) {return next(err);}
        if (user === null) {
            return res.status(404).json({'message': 'User not found!'});   
        }
        res.json(user);
    });
});

//get favouriteStores from user id
router.get('/api/users/:id/favouriteStores', function(req, res, next) {
    var id = req.params.id;
    User.findById(id, function(err, user) {
        if (err) {return next(err);}
        if (user === null) {
            return res.status(404).json({'message': 'User not found!'});   
        }
        res.json(user.favouriteStores);
    });
});

//get favouriteSpots from user id
router.get('/api/users/:id/favouriteSpots', function(req, res, next) {
    var id = req.params.id;
    User.findById(id, function(err, user) {
        if (err) {return next(err);}
        if (user === null) {
            return res.status(404).json({'message': 'User not found!'});   
        }
        res.json(user.favouriteSpots);
    });
});

//patch user with id
router.patch('/api/users/:id', function(req, res, next) {
    var id = req.params.id;
    User.findById(id, function (err, user) {
        if (err) {return next(err); }
        if (user === null) {
            return res.status(404).json({'message': 'User not found!'});   
        }
        user.email = (req.body.email || user.email);
        user.fullName = (req.body.fullName || user.fullName);
        user.password = (req.body.password || user.password);
        user.skillLevel = (req.body.skillLevel || user.skillLevel);
        user.favouriteStores = (req.body.favouriteStores || user.favouriteStores);
        user.favouriteSpots = (req.body.favouriteSpots || user.favouriteSpots);
        user.boardPreference = (req.body.boardPreference || user.boardPreference);
        user.clothingSize = (req.body.clothingSize || user.clothingSize);
        user.userHeight = (req.body.userHeight || user.userHeight);
        user.userWeight = (req.body.userWeight || user.userWeight);
    user.save();
    res.json(user);
    });
});

//put user with id
router.put('/api/users/:id', function(req, res, next) {
    var id = req.params.id;
    User.findById(id, function (err, user) {
        if (err) {return next(err); }
        if (user === null) {
            return res.status(404).json({'message': 'User not found!'});   
        }
        user.email = req.body.email;
        user.fullName = req.body.fullName;
        user.password = req.body.password;
        user.skillLevel = req.body.skillLevel;
        user.favouriteShops = req.body.favouriteShops;
        user.favouriteSpots = req.body.favouriteSpots;
        user.boardPreference = req.body.boardPreference;
        user.clothingSize = req.body.clothingSize;
        user.userHeight = req.body.userHeight;
        user.userWeight = req.body.userHeight;
    user.save();
    res.json(user);
    });
});

//delete user with id
router.delete('/api/users/:id', function(req, res, next) {
    var id = req.params.id;
    User.findOneAndDelete({_id: id}, function(err, user) {
        if (err) {return next(err);}
        if(user === null) {
            return res.status(404).json({'message': 'User not found!'});   
        }
        res.json(user);
    });
});

//post user
router.post('/api/users', function(req, res, next) {
    var user = new User(req.body);
    user.save(function(err, user) {
        if (err) { return next(err);}
        res.status(201).json(user);
    })
});

//post favouriteSpot to user
router.post('/api/users/:id/favouriteSpots', function(req, res, next) {
    var user = new User(req.body);
    user.save(function(err, user) {
        if (err) { return next(err);}
        res.status(201).json(user);
    })
});
module.exports = router;
